import streamlit as st
from datetime import datetime

st.set_page_config(page_title="MBTI 진로 추천 (중학생용)", page_icon="🎯", layout="centered")

# ----------------------------
# Helpers
# ----------------------------
MBTI_TYPES = [
    "INTJ","INTP","ENTJ","ENTP",
    "INFJ","INFP","ENFJ","ENFP",
    "ISTJ","ISFJ","ESTJ","ESFJ",
    "ISTP","ISFP","ESTP","ESFP",
]

JOB_MAP = {
    "INTJ": [("연구원", "🔬", "복잡한 문제를 장기 전략으로 풀어내는 걸 잘해요."),
              ("전략기획자", "🧭", "큰 그림을 그리고 계획을 세우는 데 강점!"),
              ("소프트웨어 엔지니어", "💻", "논리적인 설계를 즐기는 편이에요.")],
    "INTP": [("데이터 사이언티스트", "📊", "호기심으로 가설 세우고 실험하기를 좋아해요."),
              ("연구개발(R&D)", "🧪", "새로운 원리를 파고드는 탐구형."),
              ("백엔드 개발자", "🖥️", "시스템 구조와 문제해결에 몰입해요.")],
    "ENTJ": [("경영자/창업가", "🚀", "목표를 세우고 사람들을 이끌어 성과를 만듭니다."),
              ("프로덕트 매니저", "📦", "아이디어를 실제 결과로 연결하는 리더십."),
              ("컨설턴트", "🧠", "복잡한 상황을 분석하고 해법을 제시해요.")],
    "ENTP": [("창업가", "⚡", "새로운 시도를 즐기고 빠르게 가설을 검증해요."),
              ("기획자(서비스/콘텐츠)", "🧩", "아이디어를 재치 있게 연결!"),
              ("크리에이터", "🎥", "말재주와 유머로 콘텐츠를 만듭니다.")],
    "INFJ": [("상담사", "🗣️", "사람의 마음을 깊이 공감하고 도울 수 있어요."),
              ("교육기획자", "📚", "가치 있는 변화를 설계하는 데 관심."),
              ("비영리/사회혁신", "🤝", "의미 중심의 프로젝트에 끌려요.")],
    "INFP": [("작가/시나리오", "✍️", "감수성과 상상력이 풍부해요."),
              ("사회복지/상담", "🤗", "타인에게 따뜻한 지지자가 돼요."),
              ("브랜드 스토리텔러", "📖", "가치를 이야기로 풀어내요.")],
    "ENFJ": [("교사/코치", "🍎", "사람을 성장시키는 데 큰 보람을 느껴요."),
              ("커뮤니티 매니저", "🤝", "팀워크와 관계를 잘 이끕니다."),
              ("홍보/PR", "📣", "메시지를 설득력 있게 전해요.")],
    "ENFP": [("마케터", "📱", "새롭고 재밌는 아이디어가 넘쳐나요."),
              ("콘텐츠 기획자", "🎬", "다양한 관심사를 연결해 창의적으로!"),
              ("소셜임팩트 기획", "🌱", "즐거움과 의미를 함께 추구해요.")],
    "ISTJ": [("회계/재무", "🧾", "정확하고 신뢰할 수 있는 일처리."),
              ("공무원/행정", "🏛️", "규칙과 절차를 꼼꼼히 지켜요."),
              ("품질관리", "✅", "표준과 기준을 지키는 데 강점.")],
    "ISFJ": [("간호/보건", "🩺", "세심하고 책임감 있게 돌봅니다."),
              ("초등교사/유아교육", "🧸", "따뜻한 돌봄과 안정감을 줘요."),
              ("사회복지", "🫶", "배려와 헌신으로 공동체를 돕습니다.")],
    "ESTJ": [("운영/생산관리", "🏭", "현장을 체계적으로 관리해요."),
              ("프로젝트 매니저", "📅", "계획·실행·점검을 깔끔하게!"),
              ("세일즈 리더", "🤝", "목표 달성과 팀 운영에 강함.")],
    "ESFJ": [("인사/HR", "🧑‍🤝‍🧑", "사람과 조직을 연결합니다."),
              ("교사/상담", "🧑‍🏫", "배려 깊은 의사소통이 강점."),
              ("서비스 기획", "📝", "고객의 필요를 세심하게 반영.")],
    "ISTP": [("기계/전기 엔지니어", "🔧", "손으로 해결하고 구조를 이해해요."),
              ("보안/네트워크", "🛡️", "문제 원인을 침착하게 추적."),
              ("드론/로봇 제작", "🤖", "실습형 프로젝트에 강해요.")],
    "ISFP": [("디자이너", "🎨", "감각과 미적 표현이 뛰어나요."),
              ("사진/영상", "📷", "장면을 아름답게 담아내요."),
              ("플로리스트/공예", "🌸", "손끝으로 감성을 전해요.")],
    "ESTP": [("세일즈/사업개발", "💼", "순발력과 실행력이 빠릅니다."),
              ("이벤트/축제 기획", "🎉", "현장 에너지와 문제대응 굿!"),
              ("스포츠 코치", "🏅", "몸으로 부딪히며 배우는 스타일.")],
    "ESFP": [("아나운서/MC", "🎤", "사람들 앞에서 밝게 소통!"),
              ("이벤트 플래너", "🎈", "분위기 메이커, 현장 장인."),
              ("브랜드 마케터", "🏷️", "트렌드를 빠르게 캐치해요.")],
}

AXIS_TIPS = {
    "E": ("사람들과 함께할 때 에너지 충전", ["동아리 리더 도전", "팀 프로젝트 참여", "봉사활동 기획"]),
    "I": ("혼자 몰입할 때 실력 상승", ["개인 포트폴리오", "독서/기록 습관", "온라인 강의로 심화학습"]),
    "S": ("사실·경험 기반 학습 선호", ["실험/실습 위주 활동", "현장 견학", "모형 제작"]),
    "N": ("아이디어·상상 확장형", ["아이디어톤", "창작 글쓰기", "디자인 씽킹"]),
    "T": ("논리·분석으로 설득", ["코딩/수학 심화", "토론에서 근거 제시", "자료 조사"]),
    "F": ("공감·가치 중심 의사결정", ["상담/멘토링", "캠페인 기획", "따뜻한 스토리 제작"]),
    "J": ("계획·체크리스트로 안정감", ["공부 플래너", "프로젝트 마감 관리", "정리/아카이빙"]),
    "P": ("유연·탐험형으로 창의성 발휘", ["스케치/프로토타입", "즉흥 실험", "다양한 체험 참가"]),
}

SUBJECT_SUGGEST = {
    "S": ["과학", "기술·가정", "진로탐색"],
    "N": ["미술", "문학", "소프트웨어"],
    "T": ["수학", "정보", "과학"],
    "F": ["도덕/사회", "국어", "예체능"],
}

def letter_based_recos(mbti: str):
    # 과목 추천: S/N 중 하나 + T/F 중 하나 조합
    sn = SUBJECT_SUGGEST.get(mbti[1], [])
    tf = SUBJECT_SUGGEST.get(mbti[2], [])
    subjects = list(dict.fromkeys(sn + tf))  # 중복 제거, 순서 유지

    # 활동 추천: 각 축에 대한 팁 합치기
    tips = []
    actions = []
    for ch in mbti:
        tip, acts = AXIS_TIPS[ch]
        tips.append(f"**{ch}**: {tip}")
        actions.extend(acts)
    actions = list(dict.fromkeys(actions))
    return subjects[:3], tips, actions[:6]

# ----------------------------
# UI
# ----------------------------
st.title("MBTI로 보는 진로 추천 🧭✨")
st.caption("중학생을 위한 가벼운 참고용 도구입니다. 정답이 아닌 **탐색의 출발점**으로 활용해 보세요! 💡")

with st.expander("MBTI가 뭔가요? (읽어보기)"):
    st.write(
        """
        MBTI는 성격 경향을 네 가지 축(E/I, S/N, T/F, J/P)으로 살펴보는 **성향 도구**예요. 
        여기 결과는 고정된 운명이 아니라, **나를 이해하고 경험을 넓히는 힌트**로만 사용하세요. 🙂
        """
    )

col1, col2 = st.columns(2)
with col1:
    mbti = st.selectbox("나의 MBTI를 선택하세요", MBTI_TYPES, index=MBTI_TYPES.index("ENFP"))
with col2:
    st.write("")
    st.write("")
    go = st.button("추천 보기 ▶️")

if "history" not in st.session_state:
    st.session_state["history"] = []

if go and mbti:
    jobs = JOB_MAP.get(mbti, [])
    subjects, tips, actions = letter_based_recos(mbti)

    st.success(f"{mbti}에게 어울릴 법한 직업 3가지 ✨")

    for title, emoji, why in jobs:
        with st.container(border=True):
            st.markdown(f"### {emoji} {title}")
            st.write(why)

    st.divider()
    st.markdown("#### 📚 어울리는 교과")
    st.write(" · ".join(subjects) if subjects else "교과 추천 준비 중")

    st.markdown("#### 🧩 성장 포인트 (MBTI 축별 팁)")
    for t in tips:
        st.write("- ", t)

    st.markdown("#### 🎯 해볼만한 활동")
    st.write(", ".join(actions))

    # 탐색 질문
    q = [
        "내가 오래 몰입했던 활동은 무엇이었지? 그때 무엇이 재밌었나?",
        "친구들이 나에게 자주 부탁하는 역할은? (기획, 발표, 정리, 디자인 등)",
        "스트레스가 줄어드는 과목/활동은 무엇이고, 그 이유는?",
    ]
    with st.expander("📝 진로 탐색 질문 3가지"):
        for i, qq in enumerate(q, 1):
            st.write(f"{i}. {qq}")

    # 결과 저장
    result_text = [
        f"[날짜] {datetime.now().strftime('%Y-%m-%d %H:%M')}",
        f"[MBTI] {mbti}",
        "[직업] " + ", ".join([j[0] for j in jobs]),
        "[교과] " + ", ".join(subjects),
        "[활동] " + ", ".join(actions),
    ]
    result_text = "\n".join(result_text)
    st.session_state["history"].append(result_text)

    st.download_button(
        label="📥 결과 메모 저장 (txt)",
        data=result_text,
        file_name=f"mbti_career_{mbti}.txt",
        mime="text/plain",
    )

if st.session_state["history"]:
    with st.expander("📜 내 추천 기록"):
        for item in reversed(st.session_state["history"]):
            st.code(item, language="text")

st.info("⚠️ 같은 MBTI라도 사람마다 다 달라요. **여러 활동을 직접 해보며** 나에게 맞는 길을 천천히 찾아봐요! 🌈")
